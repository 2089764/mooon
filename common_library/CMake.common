# 定义公共的、可直接复用的

# 让make时显示编译命令
set(CMAKE_VERBOSE_MAKEFILE ON)

# 定义颜色值，message()时可用到
if (NOT WIN32)
    string(ASCII 27 Esc)
    set(ColourReset "${Esc}[m")
    set(ColourBold  "${Esc}[1m")
    set(Red         "${Esc}[31m")
    set(Green       "${Esc}[32m")
    set(Yellow      "${Esc}[33m")
    set(Blue        "${Esc}[34m")
    set(Magenta     "${Esc}[35m")
    set(Cyan        "${Esc}[36m")
    set(White       "${Esc}[37m")
    set(BoldRed     "${Esc}[1;31m")
    set(BoldGreen   "${Esc}[1;32m")
    set(BoldYellow  "${Esc}[1;33m")
    set(BoldBlue    "${Esc}[1;34m")
    set(BoldMagenta "${Esc}[1;35m")
    set(BoldCyan    "${Esc}[1;36m")
    set(BoldWhite   "${Esc}[1;37m")
endif ()

# MySQL
if (EXISTS /usr/local/thirdparty/mysql)
    message("${Red}MySQL found in /usr/local/thirdparty/mysql${ColourReset}")
    add_definitions("-DHAVE_MYSQL=1")
    include_directories(/usr/local/thirdparty/mysql/include)
    link_directories(/usr/local/thirdparty/mysql/lib)
    #link_libraries(libmysqlclient_r.a)
elseif (EXISTS /usr/local/mysql)
    message("${Red}MySQL found in /usr/local/mysql${ColourReset}")
    add_definitions("-DHAVE_MYSQL=1")
    include_directories(/usr/local/mysql/include)
    link_directories(/usr/local/mysql/lib)
    #link_libraries(libmysqlclient_r.a)
endif ()

# SQLite3
if (EXISTS /usr/local/thirdparty/sqlite3)
    message("${Red}SQLite3 found in /usr/local/thirdparty/sqlite3${ColourReset}")
    add_definitions("-DHAVE_SQLITE3=1")
    include_directories(/usr/local/thirdparty/sqlite3/include)
    link_directories(/usr/local/thirdparty/sqlite3/lib)
    #link_libraries(libsqlite3.a)
elseif (EXISTS /usr/local/sqlite3)
    message("${Red}SQLite3 found in /usr/local/sqlite3${ColourReset}")
    add_definitions("-DHAVE_SQLITE3=1")
    include_directories(/usr/local/sqlite3/include)
    link_directories(/usr/local/thirdparty/sqlite3/lib)
    #link_libraries(libsqlite3.a)
endif ()

# Curl
if (EXISTS /usr/local/thirdparty/curl)
    message("${Red}Curl found in /usr/local/thirdparty/curl${ColourReset}")
    add_definitions("-DHAVE_CURL=1")
    include_directories(/usr/local/thirdparty/curl/include)
    link_directories(/usr/local/thirdparty/curl/lib)
    #link_libraries(libcurl.a)
elseif (EXISTS /usr/local/curl)
    message("${Red}Curl found in /usr/local/curl${ColourReset}")
    add_definitions("-DHAVE_CURL=1")
    include_directories(/usr/local/curl/include)
    link_directories(/usr/local/thirdparty/curl/lib)
    #link_libraries(libcurl.a)
endif ()

# 编译参数
add_definitions("-Wall -fPIC -pthread -D_GNU_SOURCE -D__STDC_FORMAT_MACROS")

# 代码中如有使用到atomic，则和-march有关
if (CMAKE_SIZEOF_VOID_P EQUAL 4)
    add_definitions("-march=pentium4")    
endif ()

link_libraries(dl pthread rt z)
